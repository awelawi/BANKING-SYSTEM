Things to know about SQL
Structured Query Language
Works with RDBMS to retrieve data from a database to manipulate it or update, show etc.
The data in RDBMS is stored in a table format(kinda like what you see in excel)

SQL only works with relational databases whereas excel is a spreadsheet, and you can't change the data in a database
The reason you can't change cells on the fly is because a database has a rigid structure. The values in each row are 
tied together as a single unit. Each column must have a unique name and can only contain a specific type of data 
('Integer', 'Text', 'Date', etc).

A database is a collection of tables, and tables are collections of fields. A field is a column in a table that 
is designed to maintain specific information about every record in the table.Like how a spreadsheet has different sheets
You use conditional statement, if but known as CASE with more than 1 condition if needed
A record, also called a row, is each individual entry that exists in a table. For example, there are 91 records 
in the above Customers table. A record is a horizontal entity in a table.
A column is a vertical entity in a table that contains all information associated with a specific field in a table.

SQL Functions
                                SELECT - extracts data from a database
e.g SELECT Name(field), DOB(field) * FROM Customers(TABLE); SELECT * FROM Customers(selects all the field in TABLE Customers);
SELECT DISTINCT Country FROM Customers;(Selects only distinct element in a column in a field)So say two people in my Country
column have the same country in the country column, it will only appear once.
Example
SELECT * FROM Customers
WHERE Country='Mexico';
You can use the WHERE Clause on operators, integers,  ranges. Like you can say where the CustomerID = 1, and it returns
the first value in the table that has a field called CustomerID and where it's' 1
But you need strong command of the data in the database
Order by sorts the resulting data in ascending order by default, and add DESC to make it a descending order
UPDATE - updates data in a database
DELETE - deletes data from a database

                                INSERT INTO - inserts new data into a database
The INSERT INTO statement is used to insert new records in a table.
INSERT INTO Syntax
It is possible to write the INSERT INTO statement in two ways:
1. Specify both the column names and the values to be inserted:
INSERT INTO table_name (column1, column2, column3, ...)
VALUES (value1, value2, value3, ...);

2. If you are adding values for all the columns of the table, you do not need to specify the column names in the SQL query. 
However, make sure the order of the values is in the same order as the columns in the table. Here, the INSERT INTO syntax 
would be as follows:
INSERT INTO table_name
VALUES (value1, value2, value3, ...);
However, adding a new data doesn't' sort the table in alphabetical order, it just places the name as the last element
Did you notice that we did not insert any number into the CustomerID field?
The CustomerID column is an auto-increment field and will be generated automatically when a new record is inserted into 
the table.
When I tried to insert into the table without specifying the columns(did it for all) it returned an error because I
didn't' increment the CustomerID, however, CustomerID refers to the position of where they're' placed so how do I keep
track of that?
A NULL VALUE MEANS THE FIELD HAS NO VALUE: We will have to use the IS NULL and IS NOT NULL operators instead.
IS NULL Syntax
SELECT column_names
FROM table_name
WHERE column_name IS NULL;
                                CREATE DATABASE - creates a new database
                                ALTER DATABASE - modifies a database
The following SQL statement selects all customers that are from the same countries as the suppliers:
Example
SELECT * FROM Customers
WHERE Country IN (SELECT Country FROM Suppliers);
UPDATE table_name
SET column1 = value1, column2 = value2, ...
WHERE condition;
Note: Be careful when updating records in a table! Notice the WHERE clause in the UPDATE statement. The WHERE clause 
specifies which record(s) that should be updated. If you omit the WHERE clause, all records in the table will be updated!
e.g: UPDATE Customers
SET ContactName = 'Alfred Schmidt', City= 'Frankfurt'
WHERE CustomerID = 1;
                                CREATE TABLE - creates a new table
                                ALTER TABLE - modifies a table
                                DROP TABLE - deletes a table
                                CREATE INDEX - creates an index (search key)
                                DROP INDEX - deletes an index
                                DELETE
                                DELETE FROM table_name WHERE condition;
Note: Be careful when deleting records in a table! Notice the WHERE clause in the DELETE statement. The WHERE clause 
specifies which record(s) should be deleted. If you omit the WHERE clause, all records in the table will be deleted!

SELECT COUNT(CustomerID), Country
FROM Customers
GROUP BY Country;